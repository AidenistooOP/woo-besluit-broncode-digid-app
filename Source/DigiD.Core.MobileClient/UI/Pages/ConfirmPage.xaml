<!-- Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze  -->
<!-- gericht is op transparantie en niet op hergebruik. Hergebruik van  -->
<!-- de broncode is toegestaan onder de EUPL licentie, met uitzondering  -->
<!-- van broncode waarvoor een andere licentie is aangegeven. -->
<!-- -->
<!-- Het archief waar dit bestand deel van uitmaakt is te vinden op: -->
<!--   https://github.com/MinBZK/woo-besluit-broncode-digid-app -->
<!-- -->
<!-- Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via: -->
<!--   https://www.ncsc.nl/contact/kwetsbaarheid-melden -->
<!-- onder vermelding van "Logius, openbaar gemaakte broncode DigiD-App"  -->
<!-- -->
<!-- Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl -->
<!-- -->
<!-- This code has been disclosed in response to a request under the Dutch -->
<!-- Open Government Act ("Wet open Overheid"). This implies that publication  -->
<!-- is primarily driven by the need for transparence, not re-use. -->
<!-- Re-use is permitted under the EUPL-license, with the exception  -->
<!-- of source files that contain a different license. -->
<!-- -->
<!-- The archive that this file originates from can be found at: -->
<!--   https://github.com/MinBZK/woo-besluit-broncode-digid-app -->
<!-- -->
<!-- Security vulnerabilities may be responsibly disclosed via the Dutch NCSC: -->
<!--   https://www.ncsc.nl/contact/kwetsbaarheid-melden -->
<!-- using the reference "Logius, publicly disclosed source code DigiD-App"  -->
<!-- -->
<!-- Other questions regarding this Open Goverment Act decision may be -->
<!-- directed via email to open@logius.nl -->
<!-- -->
ï»¿<?xml version="1.0" encoding="utf-8" ?>
<baseClasses:BaseContentPage
    x:Class="DigiD.UI.Pages.ConfirmPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:baseClasses="clr-namespace:DigiD.Common.Mobile.BaseClasses;assembly=DigiD.Common.Mobile"
    xmlns:common="clr-namespace:DigiD.Common;assembly=DigiD.Common"
    xmlns:controlTemplates="clr-namespace:DigiD.Common.Mobile.ControlTemplates;assembly=DigiD.Common.Mobile"
    xmlns:controls="clr-namespace:DigiD.Common.Controls;assembly=DigiD.Common"
    xmlns:effects="clr-namespace:DigiD.Common.Effects;assembly=DigiD.Common"
    xmlns:markup="clr-namespace:DigiD.Common.Markup;assembly=DigiD.Common"
    xmlns:viewModels="clr-namespace:DigiD.ViewModels;assembly=DigiD"
    xmlns:html="clr-namespace:DigiD.Controls;assembly=DigiD"
    xmlns:views="clr-namespace:DigiD.UI.Views;assembly=DigiD"
    x:DataType="viewModels:ConfirmViewModel"
    AutomationProperties.IsInAccessibleTree="{OnPlatform Android=False}">
    <ContentView AutomationProperties.IsInAccessibleTree="False" ControlTemplate="{x:Static controlTemplates:TemplateSelector.CurrentTemplate}">
        <Grid>
            <StackLayout
                AutomationProperties.IsInAccessibleTree="{OnPlatform Android=False}"
                BackgroundColor="{DynamicResource PageBackgroundColor}"
                Spacing="10"
                VerticalOptions="FillAndExpand">

                <ScrollView Padding="20,0,20,20" VerticalOptions="FillAndExpand">
                    <StackLayout Spacing="20">
                        <controls:CustomFontLabel
                            Padding="0,20,0,0"
                            AutomationProperties.IsInAccessibleTree="True"
                            Style="{StaticResource LabelHeader}"
                            Text="{Binding HeaderText}" />

                        <html:CustomHtmlLabel
                            effects:A11YEffect.ControlType="Link"
                            AutomationProperties.IsInAccessibleTree="True"
                            HorizontalOptions="FillAndExpand"
                            Style="{StaticResource HtmlLabelRegular}"
                            Text="{Binding FooterText}"
                            VerticalOptions="Start" />

                        <StackLayout IsVisible="{Binding ShowPossibleIDs}">
                            <controls:CustomFontLabel Style="{StaticResource LabelRegular}" Text="{x:Static common:AppResources.PossibleIDs_Title}" />

                            <controls:CustomFontLabel
                                HorizontalTextAlignment="Start"
                                Style="{StaticResource LabelRegular}"
                                Text="{x:Static common:AppResources.PossibleIDs}" />
                        </StackLayout>

                        <controls:CustomSvgImage
                            AutomationProperties.IsInAccessibleTree="False"
                            HorizontalOptions="CenterAndExpand"
                            IsVisible="{Binding ImageSource, Converter={StaticResource SourceVisibleConverter}}"
                            Source="{Binding ImageSource}"
                            VerticalOptions="CenterAndExpand" />

                    </StackLayout>
                </ScrollView>

                <Grid
                    Padding="20,0"
                    ColumnDefinitions="*,*"
                    ColumnSpacing="20"
                    RowDefinitions="Auto,Auto"
                    RowSpacing="0"
                    VerticalOptions="End">
                    <controls:BorderedButton
                        x:Name="secundairyButton"
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="{markup:IntOrientation Landscape=1,
                                                                Portrait={markup:IntSFS Normal=1,
                                                                                        ExtraLarge=2}}"
                        Margin="{markup:ThicknessOrientation Landscape='0,0,0,20',
                                                             Portrait={markup:ThicknessSFS Normal='0,0,0,20',
                                                                                           ExtraLarge='0,0,0,10'}}"
                        ButtonType="Secundairy"
                        Command="{Binding CancelCommand}"
                        IsVisible="{Binding CancelText, Converter={StaticResource TextToVisibleConverter}}"
                        TabIndex="10"
                        Text="{Binding CancelText}" />

                    <controls:BorderedButton
                        Grid.Row="{markup:GridRowOrientation Landscape=0,
                                                             Portrait={markup:GridRowSFS Normal=0,
                                                                                         ExtraLarge=1}}"
                        Grid.Column="{markup:GridColumnOrientation Landscape=1,
                                                                   Portrait={markup:GridColumnSFS Normal=1,
                                                                                                  ExtraLarge=0}}"
                        Grid.ColumnSpan="{markup:IntOrientation Landscape=1,
                                                                Portrait={markup:IntSFS Normal=1,
                                                                                        ExtraLarge=2}}"
                        Margin="0,0,0,20"
                        Command="{Binding ButtonCommand}"
                        IsVisible="{Binding Source={x:Reference secundairyButton}, Path=IsVisible}"
                        TabIndex="5"
                        Text="{Binding ButtonText}" />

                    <controls:BorderedButton
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0,0,0,20"
                        Command="{Binding ButtonCommand}"
                        HeightRequest="{markup:DoubleOrientation Landscape={x:Static controls:BorderedButton.DefaultButtonHeight},
                                                                 Portrait={markup:DoubleSFS Normal={x:Static controls:BorderedButton.DefaultButtonHeight},
                                                                                            ExtraLarge=96}}"
                        IsVisible="{Binding Source={x:Reference secundairyButton}, Path=IsVisible, Converter={StaticResource BooleanInvertConverter}}"
                        TabIndex="5"
                        Text="{Binding ButtonText}" />

                </Grid>
            </StackLayout>

            <views:BlurredOverlay Command="{Binding NextCommand}" IsVisible="{Binding IsBlurVisible}" />
        </Grid>
    </ContentView>
</baseClasses:BaseContentPage>
